{
  "hash": "3f384b7945614acf97e524957d8dd7dc",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Complex Layouts with patchwork: A Comprehensive Guide\"\nformat: html\nexecute:\n  warning: false\n  message: false\n---\n\n\n\n\n## Introduction\n\nThe patchwork package provides powerful tools for combining multiple ggplot2 plots into complex layouts. This guide covers advanced techniques and common pitfalls.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(patchwork)\nlibrary(palmerpenguins)\n\n# Create some example plots to use throughout\np1 <- penguins %>%\n  ggplot(aes(bill_length_mm, bill_depth_mm, color = species)) +\n  geom_point() +\n  theme_minimal() +\n  labs(title = \"Bill Dimensions\")\n\np2 <- penguins %>%\n  ggplot(aes(species, body_mass_g, fill = species)) +\n  geom_violin() +\n  theme_minimal() +\n  labs(title = \"Body Mass Distribution\")\n\np3 <- penguins %>%\n  ggplot(aes(flipper_length_mm, fill = species)) +\n  geom_density(alpha = 0.5) +\n  theme_minimal() +\n  labs(title = \"Flipper Length Distribution\")\n\np4 <- penguins %>%\n  ggplot(aes(x = species, fill = island)) +\n  geom_bar() +\n  theme_minimal() +\n  labs(title = \"Count by Species and Island\")\n```\n:::\n\n\n\n\n## Basic Layout Operations\n\n### Side-by-Side Plots\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Using + operator\np1 + p2\n```\n\n::: {.cell-output-display}\n![](Complex-Layouts-with-patchwork_files/figure-html/basic-layout-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Using plot_layout for control\np1 + p2 + plot_layout(widths = c(2, 1))\n```\n\n::: {.cell-output-display}\n![](Complex-Layouts-with-patchwork_files/figure-html/basic-layout-2.png){width=672}\n:::\n:::\n\n\n\n\n### Stacked Plots\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Using / operator\np1 / p2\n```\n\n::: {.cell-output-display}\n![](Complex-Layouts-with-patchwork_files/figure-html/stacked-layout-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Control heights\np1 / p2 + plot_layout(heights = c(2, 1))\n```\n\n::: {.cell-output-display}\n![](Complex-Layouts-with-patchwork_files/figure-html/stacked-layout-2.png){width=672}\n:::\n:::\n\n\n\n\n## Advanced Layout Operations\n\n### Nested Layouts\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create complex nested layout\n(p1 + p2) / (p3 + p4)\n```\n\n::: {.cell-output-display}\n![](Complex-Layouts-with-patchwork_files/figure-html/nested-layout-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# With different proportions\n((p1 + p2) / p3) | p4 +\n  plot_layout(widths = c(2, 1))\n```\n\n::: {.cell-output-display}\n![](Complex-Layouts-with-patchwork_files/figure-html/nested-layout-2.png){width=672}\n:::\n:::\n\n\n\n\n### Grid Layouts\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Using plot_layout with ncol/nrow\np1 + p2 + p3 + p4 +\n  plot_layout(ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Complex-Layouts-with-patchwork_files/figure-html/grid-layout-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Using area parameter for spanning\nlayout <- \"\nAAB\nAAB\nCCC\n\"\np1 + p2 + p3 + plot_layout(design = layout)\n```\n\n::: {.cell-output-display}\n![](Complex-Layouts-with-patchwork_files/figure-html/grid-layout-2.png){width=672}\n:::\n:::\n\n\n\n\n## Customizing Layouts\n\n### Controlling Spacing\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Adjust plots spacing\np1 + p2 + plot_layout(widths = c(1, 1)) &\n  theme(plot.margin = margin(10, 10, 10, 10))\n```\n\n::: {.cell-output-display}\n![](Complex-Layouts-with-patchwork_files/figure-html/spacing-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Add specific gaps\np1 + p2 + plot_layout(widths = c(1, 1), guides = \"collect\") +\n  plot_spacer() +\n  plot_layout(widths = c(4, 4, 1))\n```\n\n::: {.cell-output-display}\n![](Complex-Layouts-with-patchwork_files/figure-html/spacing-2.png){width=672}\n:::\n:::\n\n\n\n\n### Aligning Plot Elements\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Align plots with different scales\np1 + (p2 / p3) +\n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](Complex-Layouts-with-patchwork_files/figure-html/alignment-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Fix aspect ratio\np1 + p2 +\n  plot_layout(widths = c(1, 1)) &\n  coord_fixed(ratio = 1)\n```\n\n::: {.cell-output-display}\n![](Complex-Layouts-with-patchwork_files/figure-html/alignment-2.png){width=672}\n:::\n:::\n\n\n\n\n## Working with Annotations\n\n### Adding Global Titles\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Add title to combined plot\n(p1 + p2) / (p3 + p4) +\n  plot_annotation(\n    title = \"Penguin Measurements\",\n    subtitle = \"Various dimensions across species\",\n    caption = \"Data: palmerpenguins package\",\n    tag_levels = \"A\"  # Add figure labels\n  )\n```\n\n::: {.cell-output-display}\n![](Complex-Layouts-with-patchwork_files/figure-html/annotations-1.png){width=672}\n:::\n:::\n\n\n\n\n### Custom Annotations\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create text grob\nlibrary(grid)\ntext_grob <- textGrob(\"Important Feature\", gp = gpar(col = \"red\"))\n\n# Add annotation to specific location\np1 + p2 +\n  inset_element(text_grob, 0.6, 0.8, 0.9, 0.9, align_to = 'full')\n```\n\n::: {.cell-output-display}\n![](Complex-Layouts-with-patchwork_files/figure-html/custom-annotations-1.png){width=672}\n:::\n:::\n\n\n\n\n## Complex Real-World Examples\n\n### Dashboard-Style Layout\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create summary stats plot\np_stats <- penguins %>%\n  group_by(species) %>%\n  summarise(\n    n = n(),\n    mean_mass = mean(body_mass_g, na.rm = TRUE)\n  ) %>%\n  ggplot(aes(species, mean_mass, fill = species)) +\n  geom_col() +\n  theme_minimal() +\n  labs(title = \"Average Mass by Species\")\n\n# Create dashboard layout\nlayout <- \"\nAAAB\nAAAB\nCCCD\n\"\n\np1 + p_stats + p3 + p4 +\n  plot_layout(design = layout) +\n  plot_annotation(\n    title = \"Penguin Analysis Dashboard\",\n    subtitle = \"Key metrics and distributions\",\n    theme = theme(\n      plot.title = element_text(size = 16, face = \"bold\"),\n      plot.subtitle = element_text(size = 12)\n    )\n  )\n```\n\n::: {.cell-output-display}\n![](Complex-Layouts-with-patchwork_files/figure-html/dashboard-1.png){width=672}\n:::\n:::\n\n\n\n\n### Publication-Ready Figure\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create publication layout with shared legend\n((p1 + p2) / (p3 + p4)) +\n  plot_layout(guides = \"collect\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"bottom\",\n    plot.title = element_text(size = 10),\n    axis.title = element_text(size = 8),\n    axis.text = element_text(size = 7)\n  ) +\n  plot_annotation(\n    title = \"Figure 1: Penguin Morphological Characteristics\",\n    subtitle = \"Measurements across different species\",\n    caption = \"Data collected from three islands in the Palmer Archipelago\",\n    tag_levels = \"A\"\n  )\n```\n\n::: {.cell-output-display}\n![](Complex-Layouts-with-patchwork_files/figure-html/publication-1.png){width=672}\n:::\n:::\n\n\n\n\n## Common Pitfalls and Solutions\n\n### 1. Legend Issues\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Problem: Multiple legends\nproblem_plot <- p1 + p2  # Duplicate legends\n\n# Solution: Collect legends\nsolution_plot <- p1 + p2 +\n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"bottom\")\n\nproblem_plot\n```\n\n::: {.cell-output-display}\n![](Complex-Layouts-with-patchwork_files/figure-html/legend-issues-1.png){width=672}\n:::\n\n```{.r .cell-code}\nsolution_plot\n```\n\n::: {.cell-output-display}\n![](Complex-Layouts-with-patchwork_files/figure-html/legend-issues-2.png){width=672}\n:::\n:::\n\n\n\n\n### 2. Alignment Problems\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Problem: Misaligned axes\nproblem_align <- p1 + p2  # Different scales\n\n# Solution: Fixed coordinates or scales\nsolution_align <- p1 + p2 &\n  scale_y_continuous(limits = c(0, 6000))\n\nproblem_align\n```\n\n::: {.cell-output-display}\n![](Complex-Layouts-with-patchwork_files/figure-html/alignment-issues-1.png){width=672}\n:::\n\n```{.r .cell-code}\nsolution_align\n```\n\n::: {.cell-output-display}\n![](Complex-Layouts-with-patchwork_files/figure-html/alignment-issues-2.png){width=672}\n:::\n:::\n\n\n\n\n### 3. Spacing Issues\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Problem: Uneven spacing\nproblem_spacing <- (p1 + p2) / p3\n\n# Solution: Control heights and add spacing\nsolution_spacing <- (p1 + p2) / p3 +\n  plot_layout(heights = c(1, 1)) &\n  theme(plot.margin = margin(10, 10, 10, 10))\n\nproblem_spacing\n```\n\n::: {.cell-output-display}\n![](Complex-Layouts-with-patchwork_files/figure-html/spacing-issues-1.png){width=672}\n:::\n\n```{.r .cell-code}\nsolution_spacing\n```\n\n::: {.cell-output-display}\n![](Complex-Layouts-with-patchwork_files/figure-html/spacing-issues-2.png){width=672}\n:::\n:::\n\n\n\n\n## Best Practices\n\n1. **Plan Your Layout**\n   - Sketch the layout first\n   - Consider aspect ratios\n   - Think about shared elements\n\n2. **Maintain Consistency**\n   - Use consistent themes\n   - Align similar elements\n   - Keep scales comparable\n\n3. **Handle Legends Efficiently**\n   - Collect when possible\n   - Consider placement carefully\n   - Remove redundant information\n\n4. **Control Spacing**\n   - Use appropriate margins\n   - Add spacers when needed\n   - Consider text alignment\n\n5. **Document Your Layouts**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Example of documented layout\ncreate_analysis_layout <- function(p1, p2, p3, p4) {\n  layout <- \"\n  AAB\n  AAB\n  CCC\n  \"\n  \n  (p1 + p2 + p3) +\n    plot_layout(design = layout) +\n    plot_annotation(\n      title = \"Analysis Layout\",\n      caption = \"Created: {format(Sys.time(), '%Y-%m-%d')}\"\n    )\n}\n```\n:::\n\n\n\n\n## Tips for Complex Layouts\n\n1. Build layouts incrementally\n2. Test with different window sizes\n3. Use nested operations for complex designs\n4. Consider aspect ratios early\n5. Plan legend placement carefully\n6. Use consistent themes across plots\n7. Add appropriate spacing between elements\n8. Document layout decisions",
    "supporting": [
      "Complex-Layouts-with-patchwork_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}