{
  "hash": "47c9085de44bcd52af19084ad3f2a934",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Advanced Faceting Techniques in ggplot2\"\nformat: html\nexecute:\n  warning: false\n  message: false\n---\n\n\n\n\n## Introduction\n\nFaceting in ggplot2 goes beyond simple grid layouts. This guide explores advanced techniques for creating complex and informative faceted visualizations.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggforce)   # For advanced faceting\nlibrary(ggh4x)     # For enhanced faceting\nlibrary(patchwork) # For combining plots\nlibrary(palmerpenguins)\n```\n:::\n\n\n\n\n## Complex Faceting Formulas\n\n### Nested Faceting\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Basic nested faceting\nggplot(penguins, aes(bill_length_mm, bill_depth_mm, color = sex)) +\n  geom_point() +\n  facet_nested(species ~ island) +\n  labs(title = \"Nested Faceting: Species within Islands\")\n```\n\n::: {.cell-output-display}\n![](Advanced-facetting-techniques_files/figure-html/nested-facets-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Nested faceting with varying scales\npenguins %>%\n  ggplot(aes(bill_length_mm, bill_depth_mm, color = sex)) +\n  geom_point() +\n  facet_grid(species ~ island, scales = \"free_y\") +\n  labs(title = \"Free Scales in Nested Facets\")\n```\n\n::: {.cell-output-display}\n![](Advanced-facetting-techniques_files/figure-html/nested-facets-2.png){width=672}\n:::\n:::\n\n\n\n\n### Custom Facet Layouts\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create custom layout matrix\nlayout_matrix <- \"\n112\n113\n456\n\"\n  \n  \n# Generate individual plots\np1 <- ggplot(penguins, aes(bill_length_mm, bill_depth_mm, color = species)) +\n  geom_point()\np2 <- ggplot(penguins, aes(body_mass_g, fill = species)) +\n  geom_density(alpha = 0.5)\np3 <- ggplot(penguins, aes(flipper_length_mm, fill = species)) +\n  geom_density(alpha = 0.5)\np4 <- ggplot(penguins, aes(species)) +\n  geom_bar()\np5 <- ggplot(penguins, aes(island)) +\n  geom_bar()\np6 <- ggplot(penguins, aes(sex, fill = species)) +\n  geom_bar()\n\n# Combine with layout\n(p1 + p2 + p3 + p4 + p5 + p6) + \n  plot_layout(design = layout_matrix) +\n  plot_annotation(title = \"Custom Layout Matrix\")\n```\n\n::: {.cell-output-display}\n![](Advanced-facetting-techniques_files/figure-html/custom-layouts-1.png){width=672}\n:::\n:::\n\n\n\n\n## Advanced Faceting with ggforce\n\n### Zoom Faceting\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Zoom on specific region\nggplot(penguins, aes(bill_length_mm, bill_depth_mm, color = species)) +\n  geom_point() +\n  facet_zoom(x = species == \"Gentoo\") +\n  labs(title = \"Zoom Facet on Gentoo Species\")\n```\n\n::: {.cell-output-display}\n![](Advanced-facetting-techniques_files/figure-html/zoom-facets-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Multiple zoom levels\nggplot(penguins, aes(bill_length_mm, bill_depth_mm, color = species)) +\n  geom_point() +\n  facet_zoom(xy = body_mass_g > 5000) +\n  labs(title = \"Zoom on Heavy Penguins\")\n```\n\n::: {.cell-output-display}\n![](Advanced-facetting-techniques_files/figure-html/zoom-facets-2.png){width=672}\n:::\n:::\n\n\n\n\n### Wrapped Strips\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create long labels\npenguins_long <- penguins %>%\n  mutate(\n    species_desc = case_when(\n      species == \"Adelie\" ~ \"Adelie (Small Size)\",\n      species == \"Gentoo\" ~ \"Gentoo (Large Size)\",\n      species == \"Chinstrap\" ~ \"Chinstrap (Medium Size)\"\n    )\n  )\n\n# Use wrapped strips\nggplot(penguins_long, \n       aes(bill_length_mm, bill_depth_mm, color = sex)) +\n  geom_point() +\n  facet_wrap(~species_desc, \n             labeller = label_wrap_gen(width = 15)) +\n  labs(title = \"Wrapped Strip Labels\")\n```\n\n::: {.cell-output-display}\n![](Advanced-facetting-techniques_files/figure-html/wrapped-strips-1.png){width=672}\n:::\n:::\n\n\n\n\n## Enhanced Faceting with ggh4x\n\n### Nested Strips\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create hierarchical grouping\nggplot(penguins, aes(bill_length_mm, bill_depth_mm, color = sex)) +\n  geom_point() +\n  facet_nested(~ species + island) +\n  labs(title = \"Nested Strips\")\n```\n\n::: {.cell-output-display}\n![](Advanced-facetting-techniques_files/figure-html/nested-strips-1.png){width=672}\n:::\n:::\n\n\n\n\n### Independent Scales\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Different scales for each facet\nggplot(penguins, aes(bill_length_mm, bill_depth_mm, color = sex)) +\n  geom_point() +\n  facet_grid2(species ~ island, scales = \"free\", \n              independent = \"all\") +\n  labs(title = \"Independent Scales for Each Facet\")\n```\n\n::: {.cell-output-display}\n![](Advanced-facetting-techniques_files/figure-html/independent-scales-1.png){width=672}\n:::\n:::\n\n\n\n\n### Scale-specific Breaks\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Custom breaks for specific facets\nbreaks <- list(\n  Adelie = seq(30, 50, by = 5),\n  Gentoo = seq(40, 60, by = 5),\n  Chinstrap = seq(35, 55, by = 5)\n)\n\n# ggplot(penguins, aes(bill_length_mm, bill_depth_mm)) +\n#   geom_point() +\n#   facet_wrap2(~species, scales = \"free_x\",\n#              axes = \"x\") +\n#   scale_x_continuous(breaks = breaks) +\n#   labs(title = \"Custom Breaks by Species\")\n```\n:::\n\n\n\n\n## Conditional Faceting\n\n### Dynamic Facet Variables\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function to create dynamic facets\ncreate_facets <- function(data, facet_var) {\n  ggplot(data, aes(bill_length_mm, bill_depth_mm, color = species)) +\n    geom_point() +\n    facet_wrap(vars(!!sym(facet_var))) +\n    labs(title = paste(\"Faceted by\", facet_var))\n}\n\n# Apply to different variables\np1 <- create_facets(penguins, \"island\")\np2 <- create_facets(penguins, \"sex\")\n\np1 / p2\n```\n\n::: {.cell-output-display}\n![](Advanced-facetting-techniques_files/figure-html/dynamic-facets-1.png){width=672}\n:::\n:::\n\n\n\n\n### Conditional Display\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Show facets only for specific conditions\npenguins %>%\n  group_by(species, island) %>%\n  filter(n() >= 20) %>%  # Only show groups with sufficient data\n  ggplot(aes(bill_length_mm, bill_depth_mm, color = sex)) +\n  geom_point() +\n  facet_grid(species ~ island) +\n  labs(title = \"Facets with Sufficient Data Only\")\n```\n\n::: {.cell-output-display}\n![](Advanced-facetting-techniques_files/figure-html/conditional-display-1.png){width=672}\n:::\n:::\n\n\n\n\n## Styling and Themes\n\n### Custom Strip Appearance\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Customize strip appearance\nggplot(penguins, aes(bill_length_mm, bill_depth_mm, color = sex)) +\n  geom_point() +\n  facet_wrap(~species) +\n  theme(\n    strip.background = element_rect(\n      fill = \"navy\",\n      color = \"black\",\n      linewidth = 1\n    ),\n    strip.text = element_text(\n      color = \"white\",\n      face = \"bold\",\n      size = 12\n    )\n  ) +\n  labs(title = \"Custom Strip Styling\")\n```\n\n::: {.cell-output-display}\n![](Advanced-facetting-techniques_files/figure-html/strip-styling-1.png){width=672}\n:::\n:::\n\n\n\n\n### Varying Strip Colors\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Different colors for different strips\nspecies_colors <- c(\n  \"Adelie\" = \"#FF9999\",\n  \"Gentoo\" = \"#99FF99\",\n  \"Chinstrap\" = \"#9999FF\"\n)\n\nggplot(penguins, aes(bill_length_mm, bill_depth_mm)) +\n  geom_point() +\n  facet_wrap(~species) +\n  theme(\n    strip.background = element_rect(\n      fill = species_colors[unique(penguins$species)]\n    ),\n    strip.text = element_text(\n      color = \"black\",\n      face = \"bold\"\n    )\n  ) +\n  labs(title = \"Species-Specific Strip Colors\")\n```\n\n::: {.cell-output-display}\n![](Advanced-facetting-techniques_files/figure-html/varying-strips-1.png){width=672}\n:::\n:::\n\n\n\n\n## Best Practices\n\n### 1. Scale Management\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Consider when to use free scales\np1 <- ggplot(penguins, aes(bill_length_mm, bill_depth_mm)) +\n  geom_point() +\n  facet_wrap(~species) +\n  labs(title = \"Fixed Scales\")\n\np2 <- ggplot(penguins, aes(bill_length_mm, bill_depth_mm)) +\n  geom_point() +\n  facet_wrap(~species, scales = \"free\") +\n  labs(title = \"Free Scales\")\n\np1 / p2\n```\n\n::: {.cell-output-display}\n![](Advanced-facetting-techniques_files/figure-html/scale-management-1.png){width=672}\n:::\n:::\n\n\n\n\n### 2. Space Utilization\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Efficient use of space\nggplot(penguins, aes(bill_length_mm, bill_depth_mm)) +\n  geom_point() +\n  facet_wrap(\n    ~species,\n    scales = \"free\",\n    nrow = 1,\n    strip.position = \"bottom\"\n  ) +\n  theme(\n    panel.spacing = unit(2, \"lines\"),\n    strip.placement = \"outside\"\n  ) +\n  labs(title = \"Efficient Space Usage\")\n```\n\n::: {.cell-output-display}\n![](Advanced-facetting-techniques_files/figure-html/space-utilization-1.png){width=672}\n:::\n:::\n\n\n\n\n### 3. Information Hierarchy\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Clear information hierarchy\nggplot(penguins, aes(bill_length_mm, bill_depth_mm, color = sex)) +\n  geom_point() +\n  facet_grid(\n    island ~ species,\n    switch = \"y\"\n  ) +\n  theme(\n    strip.text.y = element_text(angle = 0),\n    strip.background = element_rect(fill = \"gray95\"),\n    panel.spacing = unit(1.5, \"lines\")\n  ) +\n  labs(title = \"Clear Facet Hierarchy\")\n```\n\n::: {.cell-output-display}\n![](Advanced-facetting-techniques_files/figure-html/info-hierarchy-1.png){width=672}\n:::\n:::\n\n\n\n\n## Common Pitfalls and Solutions\n\n### 1. Overcrowding\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Bad: Too many facets\nbad_facets <- ggplot(penguins, \n                     aes(bill_length_mm, bill_depth_mm, color = sex)) +\n  geom_point() +\n  facet_grid(species ~ island ~ sex)\n\n# Better: Simplified faceting\ngood_facets <- ggplot(penguins,\n                      aes(bill_length_mm, bill_depth_mm, color = sex)) +\n  geom_point() +\n  facet_grid(species ~ island)\n\n# Compare\nbad_facets + labs(title = \"Too Many Facets\")\n```\n\n::: {.cell-output-display}\n![](Advanced-facetting-techniques_files/figure-html/overcrowding-1.png){width=672}\n:::\n\n```{.r .cell-code}\ngood_facets + labs(title = \"Appropriate Number of Facets\")\n```\n\n::: {.cell-output-display}\n![](Advanced-facetting-techniques_files/figure-html/overcrowding-2.png){width=672}\n:::\n:::\n\n\n\n\n### 2. Label Overlap\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Problem: Overlapping labels\nproblem_labels <- ggplot(penguins,\n                        aes(bill_length_mm, bill_depth_mm)) +\n  geom_point() +\n  facet_wrap(~species, labeller = label_wrap_gen(width = 5))\n\n# Solution: Proper wrapping and spacing\nfixed_labels <- ggplot(penguins,\n                      aes(bill_length_mm, bill_depth_mm)) +\n  geom_point() +\n  facet_wrap(\n    ~species,\n    labeller = label_wrap_gen(width = 10)\n  ) +\n  theme(\n    strip.text = element_text(margin = margin(5, 0, 5, 0))\n  )\n\n# Compare\nproblem_labels + labs(title = \"Overlapping Labels\")\n```\n\n::: {.cell-output-display}\n![](Advanced-facetting-techniques_files/figure-html/label-overlap-1.png){width=672}\n:::\n\n```{.r .cell-code}\nfixed_labels + labs(title = \"Fixed Labels\")\n```\n\n::: {.cell-output-display}\n![](Advanced-facetting-techniques_files/figure-html/label-overlap-2.png){width=672}\n:::\n:::\n\n\n\n\n## Tips for Complex Faceting\n\n1.  **Plan Your Layout**\n    -   Sketch the desired layout\n    -   Consider the hierarchy of variables\n    -   Think about scale relationships\n2.  **Manage Space Efficiently**\n    -   Use appropriate spacing\n    -   Consider strip placement\n    -   Control panel sizes\n3.  **Handle Labels**\n    -   Use clear labeling\n    -   Manage long labels\n    -   Consider orientation\n4.  **Consider Performance**\n    -   Limit number of facets\n    -   Use efficient computations\n    -   Test with large datasets\n",
    "supporting": [
      "Advanced-facetting-techniques_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}