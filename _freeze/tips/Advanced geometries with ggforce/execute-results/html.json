{
  "hash": "1185a810a209e0d68be4c83025878728",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Advanced Geometries with ggforce\"\nformat: html\nexecute:\n  warning: false\n  message: false\n---\n\n\n\n\n## Introduction\n\nggforce extends ggplot2 with advanced geometries for specialized visualizations. This guide explores these powerful additions.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggforce)\nlibrary(palmerpenguins)\nlibrary(concaveman)\n\ntheme_set(theme_minimal())\n```\n:::\n\n\n\n\n## Arc and Circle Geometries\n\n### geom_arc and geom_arc_bar\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create data for arcs\narc_data <- tibble(\n  start = seq(0, 2*pi, length.out = 4),\n  end = lead(start, default = 2*pi),\n  r = rep(2:3, each = 2),\n  value = 1:4\n)\n\n# Basic arc plot\nggplot(arc_data) +\n  geom_arc_bar(aes(\n    x0 = 0, y0 = 0,\n    r0 = r-0.5, r = r,\n    start = start, end = end,\n    fill = factor(value)\n  )) +\n  coord_fixed() +\n  labs(title = \"Arc Bars\") +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](Advanced-geometries-with-ggforce_files/figure-html/arc-geometries-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Animated circle segments\nangles <- seq(0, 2*pi, length.out = 20)\ncircle_data <- tibble(\n  start = angles,\n  end = lead(angles, default = first(angles)),\n  group = rep(1:4, each = 5)\n)\n\nggplot(circle_data) +\n  geom_arc(aes(\n    x0 = 0, y0 = 0,\n    r = group,\n    start = start, end = end,\n    color = factor(group)\n  )) +\n  coord_fixed() +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](Advanced-geometries-with-ggforce_files/figure-html/arc-geometries-2.png){width=672}\n:::\n:::\n\n\n\n\n### Circles and Regular Polygons\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create data for circles\ncircle_data <- tibble(\n  x0 = rep(1:3, each = 2),\n  y0 = rep(1:2, 3),\n  r = seq(0.3, 0.8, length.out = 6)\n)\n\n# Circles with different sizes\nggplot(circle_data) +\n  geom_circle(aes(x0 = x0, y0 = y0, r = r, fill = r)) +\n  coord_fixed() +\n  scale_fill_viridis_c() +\n  theme_minimal() +\n  labs(title = \"Circles with Varying Radii\")\n```\n\n::: {.cell-output-display}\n![](Advanced-geometries-with-ggforce_files/figure-html/circle-geometries-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Regular polygons\npolygon_data <- tibble(\n  x0 = rep(1:3, each = 2),\n  y0 = rep(1:2, 3),\n  sides = 3:8\n)\n\nggplot(polygon_data) +\n  geom_regon(aes(x0 = x0, y0 = y0, sides = sides, r = 0.4, angle = 0,\n                 fill = factor(sides))) +\n  coord_fixed() +\n  theme_minimal() +\n  labs(title = \"Regular Polygons\",\n       fill = \"Number of sides\")\n```\n\n::: {.cell-output-display}\n![](Advanced-geometries-with-ggforce_files/figure-html/circle-geometries-2.png){width=672}\n:::\n:::\n\n\n\n\n## Advanced Mark Geometries\n\n### geom_mark_hull and geom_mark_ellipse\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Mark interesting groups\nggplot(penguins, aes(bill_length_mm, bill_depth_mm)) +\n  geom_point() +\n  geom_mark_hull(aes(\n    color = species,\n    label = species,\n    filter = species != \"Adelie\"\n  ),\n  expand = unit(3, \"mm\")) +\n  labs(title = \"Species Groups with Hull Marking\")\n```\n\n::: {.cell-output-display}\n![](Advanced-geometries-with-ggforce_files/figure-html/mark-geometries-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Ellipse marking with labels\nggplot(penguins, aes(bill_length_mm, bill_depth_mm)) +\n  geom_point() +\n  geom_mark_ellipse(aes(\n    color = species,\n    label = species,\n    description = paste(\"Mean mass:\", round(mean(body_mass_g, na.rm = TRUE)), \"g\")\n  )) +\n  labs(title = \"Species Groups with Ellipse Marking\") + \n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Advanced-geometries-with-ggforce_files/figure-html/mark-geometries-2.png){width=672}\n:::\n:::\n\n\n\n\n### geom_mark_rect and geom_mark_circle\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Rectangular highlights\nggplot(penguins, aes(bill_length_mm, bill_depth_mm)) +\n  geom_point() +\n  geom_mark_rect(aes(\n    filter = species == \"Gentoo\",\n    label = \"Gentoo\",\n    description = \"Largest species\"\n  )) +\n  labs(title = \"Rectangular Highlight\")\n```\n\n::: {.cell-output-display}\n![](Advanced-geometries-with-ggforce_files/figure-html/rect-circle-marks-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Circular highlights\nggplot(penguins, aes(bill_length_mm, bill_depth_mm)) +\n  geom_point() +\n  geom_mark_circle(aes(\n    group = species,\n    label = species\n  ),\n  label.buffer = unit(10, \"mm\")) +\n  labs(title = \"Circular Species Groups\") \n```\n\n::: {.cell-output-display}\n![](Advanced-geometries-with-ggforce_files/figure-html/rect-circle-marks-2.png){width=672}\n:::\n:::\n\n\n\n\n## Specialized Layouts\n\n### Parallel Sets (geom_parallel_sets)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create parallel sets visualization\n\npenguins %>%\n  gather_set_data(c(species, island, sex)) %>%\n  group_by(species, island, sex) %>% \n  mutate(value = n()) %>% \n  ggplot(aes(x = x, id = id, split = y, value = value)) +\n  geom_parallel_sets(aes(fill = species)) +\n  geom_parallel_sets_axes(axis.width = 0.1) +\n  geom_parallel_sets_labels(angle = 0) +\n  labs(title = \"Penguin Characteristics\",\n       subtitle = \"Parallel Sets Visualization\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Advanced-geometries-with-ggforce_files/figure-html/parallel-sets-1.png){width=672}\n:::\n:::\n\n\n\n\n### Sina Plots (geom_sina)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Basic sina plot\nggplot(penguins, aes(species, body_mass_g)) +\n  geom_sina(aes(color = species)) +\n  labs(title = \"Distribution of Body Mass\",\n       subtitle = \"Sina Plot\")\n```\n\n::: {.cell-output-display}\n![](Advanced-geometries-with-ggforce_files/figure-html/sina-plots-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Combined with violin plot\nggplot(penguins, aes(species, body_mass_g)) +\n  geom_violin(alpha = 0.3) +\n  geom_sina(aes(color = sex)) +\n  labs(title = \"Body Mass Distribution\",\n       subtitle = \"Violin + Sina Plot\")\n```\n\n::: {.cell-output-display}\n![](Advanced-geometries-with-ggforce_files/figure-html/sina-plots-2.png){width=672}\n:::\n:::\n\n\n\n\n## Advanced Faceting\n\n### facet_zoom\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Zoom in on specific region\nggplot(penguins, aes(bill_length_mm, bill_depth_mm, color = species)) +\n  geom_point() +\n  facet_zoom(x = species == \"Gentoo\") +\n  labs(title = \"Bill Dimensions with Zoom on Gentoo\")\n```\n\n::: {.cell-output-display}\n![](Advanced-geometries-with-ggforce_files/figure-html/facet-zoom-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Multiple zoom levels\nggplot(penguins, aes(bill_length_mm, bill_depth_mm, color = species)) +\n  geom_point() +\n  facet_zoom(xy = body_mass_g > 5000) +\n  labs(title = \"Bill Dimensions\",\n       subtitle = \"Zoomed on Heavy Penguins\")\n```\n\n::: {.cell-output-display}\n![](Advanced-geometries-with-ggforce_files/figure-html/facet-zoom-2.png){width=672}\n:::\n:::\n\n\n\n\n## Link and Connection Geometries\n\n### geom_link and geom_link2\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create data for links\nlink_data <- tibble(\n  x = c(1, 2, 3),\n  y = c(1, 2, 1),\n  xend = c(2, 3, 1),\n  yend = c(2, 1, 1)\n)\n\n# Basic links\nggplot(link_data) +\n  geom_link(aes(\n    x = x, y = y,\n    xend = xend, yend = yend,\n    alpha = stat(index)\n  )) +\n  labs(title = \"Basic Links\")\n```\n\n::: {.cell-output-display}\n![](Advanced-geometries-with-ggforce_files/figure-html/link-geometries-1.png){width=672}\n:::\n:::\n\n\n\n\n## Specialized Annotations\n\n### geom_bezier\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create bezier curve data\nbezier_data <- tibble(\n  x = c(1, 2, 3, 4),\n  y = c(1, 3, 2, 4),\n  group = 1\n)\n\n# Simple bezier curve\nggplot(bezier_data, aes(x, y, group = group)) +\n  geom_bezier() +\n  labs(title = \"Simple Bezier Curve\")\n```\n\n::: {.cell-output-display}\n![](Advanced-geometries-with-ggforce_files/figure-html/bezier-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Multiple bezier curves\nbezier_data2 <- bind_rows(\n  bezier_data,\n  bezier_data %>% mutate(y = y + 2, group = 2)\n)\n\nggplot(bezier_data2, aes(x, y, group = group, color = factor(group))) +\n  geom_bezier() +\n  labs(title = \"Multiple Bezier Curves\")\n```\n\n::: {.cell-output-display}\n![](Advanced-geometries-with-ggforce_files/figure-html/bezier-2.png){width=672}\n:::\n:::\n\n\n\n\n## Common Applications and Best Practices\n\n### 1. Highlighting Groups\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Combine mark geometries with points\nggplot(penguins, aes(bill_length_mm, bill_depth_mm)) +\n  geom_point(alpha = 0.5) +\n  geom_mark_ellipse(\n    aes(filter = species == \"Gentoo\",\n        label = \"Gentoo\",\n        description = \"Largest species\"),\n    label.buffer = unit(10, \"mm\")\n  ) +\n  labs(title = \"Highlighting with Context\")\n```\n\n::: {.cell-output-display}\n![](Advanced-geometries-with-ggforce_files/figure-html/group-highlight-1.png){width=672}\n:::\n:::\n\n\n\n\n### 2. Complex Layouts\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Combine multiple specialized geometries\nggplot(penguins, aes(bill_length_mm, bill_depth_mm)) +\n  geom_point(alpha = 0.5) +\n  geom_mark_hull(aes(color = species, fill = species),\n                 alpha = 0.2) +\n  facet_zoom(x = bill_length_mm > 50) +\n  labs(title = \"Multi-layer Visualization\")\n```\n\n::: {.cell-output-display}\n![](Advanced-geometries-with-ggforce_files/figure-html/complex-layouts-1.png){width=672}\n:::\n:::\n\n\n\n\n### 3. Statistical Summaries\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Use sina plots for distribution visualization\nggplot(penguins, aes(species, body_mass_g)) +\n  geom_sina(aes(color = sex), alpha = 0.6) +\n  geom_boxplot(width = 0.2, alpha = 0.2) +\n  labs(title = \"Distribution with Multiple Geometries\")\n```\n\n::: {.cell-output-display}\n![](Advanced-geometries-with-ggforce_files/figure-html/stat-summaries-1.png){width=672}\n:::\n:::\n\n\n\n\n## Tips and Tricks\n\n1. **Coordinate Systems**\n   - Use `coord_fixed()` with circular geometries\n   - Consider aspect ratio for mark geometries\n   - Adjust zoom factors in facet_zoom\n\n2. **Aesthetics**\n   - Layer geometries effectively\n   - Use transparency for clarity\n   - Consider color and fill separately\n\n3. **Performance**\n   - Limit complex geometries with large datasets\n   - Use simpler alternatives when possible\n   - Consider static alternatives to animations\n\n4. **Integration**\n   - Combine with standard ggplot2 geometries\n   - Use consistent themes\n   - Maintain visual hierarchy",
    "supporting": [
      "Advanced-geometries-with-ggforce_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}